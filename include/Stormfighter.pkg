$#include "common.h"

$pfile "include/stdlib.pkg"

typedef float Ogre::Real;
typedef std::string Ogre::String; // careful!

$pfile "include/core_ogre.pkg"
$pfile "include/core_ois.pkg"

namespace SF {

/// String class
typedef std::string SString;

/// Real number class
typedef Ogre::Real SReal;

/// 3D Vector class
typedef Ogre::Vector3 SVector3;

/// Quaternion class
typedef Ogre::Quaternion SQuaternion;

/// Angle (radian) class
typedef Ogre::Radian SRadian;

/// Angle (degree) class
typedef Ogre::Degree SDegree;

/// Ray class
typedef Ogre::Ray SRay;

/// Colour class
typedef Ogre::ColourValue SColourValue;

/// Basic mathematical objects' typedefs
typedef Ogre::AxisAlignedBox SAxisAlignedBox;
typedef Ogre::Sphere SSphere;
typedef Ogre::Plane SPlane;

/// An std::vector of SStrings
typedef std::vector<std::string> StringVector;

typedef std::vector<SF::GameObject*> GameObjectList;

}; // namespace SF

// include everything
$#include "LuaForward.h"

TOLUA_PROPERTY_TYPE(qt);

namespace SF {

$pfile "include/core_components_graphics.pkg"
$pfile "include/core_components_physics.pkg"
$pfile "include/core_components_scripting.pkg"
$pfile "include/core_gameobject.pkg"
$pfile "include/core_modules.pkg"
$pfile "include/core_application.pkg"

};
